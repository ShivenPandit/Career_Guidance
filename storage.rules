rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // User profile images and documents
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // College documents and images - public read, college admin write
    match /colleges/{collegeId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.collegeIds[collegeId] == true;
    }
    
    // Application documents - user and college access
    match /applications/{applicationId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
                            get(/databases/$(database)/documents/applications/$(applicationId)).data.userId == request.auth.uid;
      allow read: if request.auth != null && 
                     get(/databases/$(database)/documents/applications/$(applicationId)).data.collegeId in 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.collegeIds;
    }
    
    // Public assets - public read, admin write
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Test materials - public read, admin write
    match /tests/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Temporary uploads - user specific, auto-delete after 24 hours
    match /temp/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
                            request.auth.uid == userId &&
                            request.time < resource.timeCreated + duration.value(1, 'd');
    }
    
    // Default deny rule
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
